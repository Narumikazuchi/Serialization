<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Narumikazuchi.Serialization</name>
    </assembly>
    <members>
        <member name="T:Narumikazuchi.Serialization.ISerializable">
            <summary>
            Represents an object that can be serializedto a byte representation.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Serialization.ISerializable.ToBytes">
            <summary>
            Serializes this instance into a <see cref="T:System.Byte"/>[].
            </summary>
            <returns>This instance represented in byte form</returns>
        </member>
        <member name="T:Narumikazuchi.Serialization.ISerializer`1">
            <summary>
            Represents a serializer for classes that implement either <see cref="T:Narumikazuchi.Serialization.ISerializable"/> directly or indirectly through another interface.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Serialization.ISerializer`1.Serialize(System.IO.Stream,`0)">
            <summary>
            Serializes the specified graph into the specified stream.
            </summary>
            <param name="stream">The stream to serialize the graph into.</param>
            <param name="graph">The graph to serialize.</param>
        </member>
        <member name="M:Narumikazuchi.Serialization.ISerializer`1.Serialize(System.IO.Stream,`0,System.Int64@)">
            <summary>
            Serializes the specified graph into the specified stream starting at the specified offset in the stream.
            </summary>
            <param name="stream">The stream to serialize the graph into.</param>
            <param name="graph">The graph to serialize.</param>
            <param name="offset">The offset in the stream where to begin writing.</param>
        </member>
        <member name="M:Narumikazuchi.Serialization.ISerializer`1.Serialize(System.IO.Stream,`0,Narumikazuchi.Serialization.SerializationFinishAction@)">
            <summary>
            Serializes the specified graph into the specified stream.
            </summary>
            <param name="stream">The stream to serialize the graph into.</param>
            <param name="graph">The graph to serialize.</param>
            <param name="actionAfter">The actions to perform after the writing operation has finished.</param>
        </member>
        <member name="M:Narumikazuchi.Serialization.ISerializer`1.Serialize(System.IO.Stream,`0,System.Int64@,Narumikazuchi.Serialization.SerializationFinishAction@)">
            <summary>
            Serializes the specified graph into the specified stream starting at the specified offset in the stream.
            </summary>
            <param name="stream">The stream to serialize the graph into.</param>
            <param name="graph">The graph to serialize.</param>
            <param name="offset">The offset in the stream where to begin writing.</param>
            <param name="actionAfter">The actions to perform after the writing operation has finished.</param>
        </member>
        <member name="M:Narumikazuchi.Serialization.ISerializer`1.TrySerialize(System.IO.Stream,`0)">
            <summary>
            Tries to serialize the specified graph into the specified stream.
            </summary>
            <param name="stream">The stream to serialize the graph into.</param>
            <param name="graph">The graph to serialize.</param>
            <returns><see langword="true"/> if the serialization succeeded; else, <see langword="false"/></returns>
        </member>
        <member name="M:Narumikazuchi.Serialization.ISerializer`1.TrySerialize(System.IO.Stream,`0,System.Int64@)">
            <summary>
            Tries to serialize the specified graph into the specified stream starting at the specified offset in the stream.
            </summary>
            <param name="stream">The stream to serialize the graph into.</param>
            <param name="graph">The graph to serialize.</param>
            <param name="offset">The offset in the stream where to begin writing.</param>
            <returns><see langword="true"/> if the serialization succeeded; else, <see langword="false"/></returns>
        </member>
        <member name="M:Narumikazuchi.Serialization.ISerializer`1.TrySerialize(System.IO.Stream,`0,Narumikazuchi.Serialization.SerializationFinishAction@)">
            <summary>
            Tries to serialize the specified graph into the specified stream.
            </summary>
            <param name="stream">The stream to serialize the graph into.</param>
            <param name="graph">The graph to serialize.</param>
            <param name="actionAfter">The actions to perform after the writing operation has finished.</param>
            <returns><see langword="true"/> if the serialization succeeded; else, <see langword="false"/></returns>
        </member>
        <member name="M:Narumikazuchi.Serialization.ISerializer`1.TrySerialize(System.IO.Stream,`0,System.Int64@,Narumikazuchi.Serialization.SerializationFinishAction@)">
            <summary>
            Tries to serialize the specified graph into the specified stream starting at the specified offset in the stream.
            </summary>
            <param name="stream">The stream to serialize the graph into.</param>
            <param name="graph">The graph to serialize.</param>
            <param name="offset">The offset in the stream where to begin writing.</param>
            <param name="actionAfter">The actions to perform after the writing operation has finished.</param>
            <returns><see langword="true"/> if the serialization succeeded; else, <see langword="false"/></returns>
        </member>
        <member name="M:Narumikazuchi.Serialization.ISerializer`1.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes the specified stream into an instance of type <typeparamref name="TType"/>.
            </summary>
            <param name="stream">The stream to deserialize the graph from.</param>
            <returns>The instance represented by the bytes in the specified stream</returns>
        </member>
        <member name="M:Narumikazuchi.Serialization.ISerializer`1.Deserialize(System.IO.Stream,System.Int64@)">
            <summary>
            Deserializes the specified stream starting at the specified offset into an instance of type <typeparamref name="TType"/>.
            </summary>
            <param name="stream">The stream to deserialize the graph from.</param>
            <param name="offset">The offset in the stream where to begin reading.</param>
            <returns>The instance represented by the bytes in the specified stream</returns>
        </member>
        <member name="M:Narumikazuchi.Serialization.ISerializer`1.Deserialize(System.IO.Stream,Narumikazuchi.Serialization.SerializationFinishAction@)">
            <summary>
            Deserializes the specified stream into an instance of type <typeparamref name="TType"/>.
            </summary>
            <param name="stream">The stream to deserialize the graph from.</param>
            <param name="actionAfter">The actions to perform after the reading operation has finished.</param>
            <returns>The instance represented by the bytes in the specified stream</returns>
        </member>
        <member name="M:Narumikazuchi.Serialization.ISerializer`1.Deserialize(System.IO.Stream,System.Int64@,Narumikazuchi.Serialization.SerializationFinishAction@)">
            <summary>
            Deserializes the specified stream starting at the specified offset into an instance of type <typeparamref name="TType"/>.
            </summary>
            <param name="stream">The stream to deserialize the graph from.</param>
            <param name="offset">The offset in the stream where to begin reading.</param>
            <param name="actionAfter">The actions to perform after the reading operation has finished.</param>
            <returns>The instance represented by the bytes in the specified stream</returns>
        </member>
        <member name="M:Narumikazuchi.Serialization.ISerializer`1.TryDeserialize(System.IO.Stream,`0@)">
            <summary>
            Tries to deserialize the specified stream into an instance of type <typeparamref name="TType"/>.
            </summary>
            <param name="stream">The stream to deserialize the graph from.</param>
            <param name="result">The instance represented by the bytes in the specified stream.</param>
            <returns><see langword="true"/> if the serialization succeeded; else, <see langword="false"/></returns>
        </member>
        <member name="M:Narumikazuchi.Serialization.ISerializer`1.TryDeserialize(System.IO.Stream,System.Int64@,`0@)">
            <summary>
            Tries to deserialize the specified stream starting at the specified offset into an instance of type <typeparamref name="TType"/>.
            </summary>
            <param name="stream">The stream to deserialize the graph from.</param>
            <param name="offset">The offset in the stream where to begin reading.</param>
            <param name="result">The instance represented by the bytes in the specified stream.</param>
            <returns><see langword="true"/> if the serialization succeeded; else, <see langword="false"/></returns>
        </member>
        <member name="M:Narumikazuchi.Serialization.ISerializer`1.TryDeserialize(System.IO.Stream,Narumikazuchi.Serialization.SerializationFinishAction@,`0@)">
            <summary>
            Tries to deserialize the specified stream into an instance of type <typeparamref name="TType"/>.
            </summary>
            <param name="stream">The stream to deserialize the graph from.</param>
            <param name="actionAfter">The actions to perform after the reading operation has finished.</param>
            <param name="result">The instance represented by the bytes in the specified stream.</param>
            <returns><see langword="true"/> if the serialization succeeded; else, <see langword="false"/></returns>
        </member>
        <member name="M:Narumikazuchi.Serialization.ISerializer`1.TryDeserialize(System.IO.Stream,System.Int64@,Narumikazuchi.Serialization.SerializationFinishAction@,`0@)">
            <summary>
            Tries to deserialize the specified stream starting at the specified offset into an instance of type <typeparamref name="TType"/>.
            </summary>
            <param name="stream">The stream to deserialize the graph from.</param>
            <param name="offset">The offset in the stream where to begin reading.</param>
            <param name="actionAfter">The actions to perform after the reading operation has finished.</param>
            <param name="result">The instance represented by the bytes in the specified stream.</param>
            <returns><see langword="true"/> if the serialization succeeded; else, <see langword="false"/></returns>
        </member>
        <member name="T:Narumikazuchi.Serialization.SerializationFinishAction">
            <summary>
            Represents the actions a serializer takes after finishing a serialization operation.
            </summary>
        </member>
    </members>
</doc>
